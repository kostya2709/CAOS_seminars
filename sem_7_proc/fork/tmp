
a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	push   0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmp *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 2f 00 00 	bnd jmp *0x2f4d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <getpid@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 2e 00 00 	bnd jmp *0x2ee5(%rip)        # 3fa0 <getpid@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 2e 00 00 	bnd jmp *0x2edd(%rip)        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <printf@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 2e 00 00 	bnd jmp *0x2ed5(%rip)        # 3fb0 <printf@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <__isoc99_scanf@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 2e 00 00 	bnd jmp *0x2ecd(%rip)        # 3fb8 <__isoc99_scanf@GLIBC_2.7>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <getppid@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 2e 00 00 	bnd jmp *0x2ec5(%rip)        # 3fc0 <getppid@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <wait@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 2e 00 00 	bnd jmp *0x2ebd(%rip)        # 3fc8 <wait@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <fork@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3fd0 <fork@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	45 31 c0             	xor    %r8d,%r8d
    1136:	31 c9                	xor    %ecx,%ecx
    1138:	48 8d 3d 34 01 00 00 	lea    0x134(%rip),%rdi        # 1273 <main>
    113f:	ff 15 93 2e 00 00    	call   *0x2e93(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1145:	f4                   	hlt    
    1146:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    114d:	00 00 00 

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d b9 2e 00 00 	lea    0x2eb9(%rip),%rdi        # 4010 <__TMC_END__>
    1157:	48 8d 05 b2 2e 00 00 	lea    0x2eb2(%rip),%rax        # 4010 <__TMC_END__>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 76 2e 00 00 	mov    0x2e76(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmp    *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d 89 2e 00 00 	lea    0x2e89(%rip),%rdi        # 4010 <__TMC_END__>
    1187:	48 8d 35 82 2e 00 00 	lea    0x2e82(%rip),%rsi        # 4010 <__TMC_END__>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 45 2e 00 00 	mov    0x2e45(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmp    *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 45 2e 00 00 00 	cmpb   $0x0,0x2e45(%rip)        # 4010 <__TMC_END__>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 2e 00 00 	mov    0x2e26(%rip),%rdi        # 4008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	call   10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	call   1150 <deregister_tm_clones>
    11ec:	c6 05 1d 2e 00 00 01 	movb   $0x1,0x2e1d(%rip)        # 4010 <__TMC_END__>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	ret    
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	ret    
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmp    1180 <register_tm_clones>

0000000000001209 <get_rsp>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	48 83 ec 10          	sub    $0x10,%rsp
    1215:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    121c:	00 00 
    121e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1222:	31 c0                	xor    %eax,%eax
    1224:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    1228:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    122c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1233:	00 00 
    1235:	74 05                	je     123c <get_rsp+0x33>
    1237:	e8 84 fe ff ff       	call   10c0 <__stack_chk_fail@plt>
    123c:	c9                   	leave  
    123d:	c3                   	ret    

000000000000123e <get_rip>:
    123e:	f3 0f 1e fa          	endbr64 
    1242:	55                   	push   %rbp
    1243:	48 89 e5             	mov    %rsp,%rbp
    1246:	48 83 ec 10          	sub    $0x10,%rsp
    124a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1251:	00 00 
    1253:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1257:	31 c0                	xor    %eax,%eax
    1259:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    125d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1261:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1268:	00 00 
    126a:	74 05                	je     1271 <get_rip+0x33>
    126c:	e8 4f fe ff ff       	call   10c0 <__stack_chk_fail@plt>
    1271:	c9                   	leave  
    1272:	c3                   	ret    

0000000000001273 <main>:
    1273:	f3 0f 1e fa          	endbr64 
    1277:	55                   	push   %rbp
    1278:	48 89 e5             	mov    %rsp,%rbp
    127b:	53                   	push   %rbx
    127c:	48 83 ec 28          	sub    $0x28,%rsp
    1280:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1287:	00 00 
    1289:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    128d:	31 c0                	xor    %eax,%eax
    128f:	b8 00 00 00 00       	mov    $0x0,%eax
    1294:	e8 70 ff ff ff       	call   1209 <get_rsp>
    1299:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    129d:	b8 00 00 00 00       	mov    $0x0,%eax
    12a2:	e8 97 ff ff ff       	call   123e <get_rip>
    12a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    12ab:	e8 60 fe ff ff       	call   1110 <fork@plt>
    12b0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    12b3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    12b7:	75 48                	jne    1301 <main+0x8e>
    12b9:	e8 32 fe ff ff       	call   10f0 <getppid@plt>
    12be:	89 c3                	mov    %eax,%ebx
    12c0:	e8 eb fd ff ff       	call   10b0 <getpid@plt>
    12c5:	89 da                	mov    %ebx,%edx
    12c7:	89 c6                	mov    %eax,%esi
    12c9:	48 8d 05 38 0d 00 00 	lea    0xd38(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    12d0:	48 89 c7             	mov    %rax,%rdi
    12d3:	b8 00 00 00 00       	mov    $0x0,%eax
    12d8:	e8 f3 fd ff ff       	call   10d0 <printf@plt>
    12dd:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    12e4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    12e8:	48 89 c6             	mov    %rax,%rsi
    12eb:	48 8d 05 38 0d 00 00 	lea    0xd38(%rip),%rax        # 202a <_IO_stdin_used+0x2a>
    12f2:	48 89 c7             	mov    %rax,%rdi
    12f5:	b8 00 00 00 00       	mov    $0x0,%eax
    12fa:	e8 e1 fd ff ff       	call   10e0 <__isoc99_scanf@plt>
    12ff:	eb 25                	jmp    1326 <main+0xb3>
    1301:	e8 aa fd ff ff       	call   10b0 <getpid@plt>
    1306:	89 c6                	mov    %eax,%esi
    1308:	48 8d 05 1e 0d 00 00 	lea    0xd1e(%rip),%rax        # 202d <_IO_stdin_used+0x2d>
    130f:	48 89 c7             	mov    %rax,%rdi
    1312:	b8 00 00 00 00       	mov    $0x0,%eax
    1317:	e8 b4 fd ff ff       	call   10d0 <printf@plt>
    131c:	bf 00 00 00 00       	mov    $0x0,%edi
    1321:	e8 da fd ff ff       	call   1100 <wait@plt>
    1326:	b8 00 00 00 00       	mov    $0x0,%eax
    132b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    132f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1336:	00 00 
    1338:	74 05                	je     133f <main+0xcc>
    133a:	e8 81 fd ff ff       	call   10c0 <__stack_chk_fail@plt>
    133f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1343:	c9                   	leave  
    1344:	c3                   	ret    

Disassembly of section .fini:

0000000000001348 <_fini>:
    1348:	f3 0f 1e fa          	endbr64 
    134c:	48 83 ec 08          	sub    $0x8,%rsp
    1350:	48 83 c4 08          	add    $0x8,%rsp
    1354:	c3                   	ret    
